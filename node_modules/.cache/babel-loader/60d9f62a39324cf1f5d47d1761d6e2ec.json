{"ast":null,"code":"var _jsxFileName = \"/Users/desmiles/Desktop/React/youtube/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport youtube from '../apis/youtubeapi';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  useEffect(() => {\n    onSearchSubmit('Bridges');\n  }, []);\n\n  const onSearchSubmit = async term => {\n    console.log(\"SEARCH TERM: \", term);\n    const res = await youtube.get('/search', {\n      params: {\n        q: term\n      }\n    });\n    setVideos(res.data.items);\n    setSelectedVideo(res.data.items[0]);\n  };\n\n  const onVideoSelect = video => {\n    setSelectedVideo(video);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App ui container\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      formProp: onSearchSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" ten wide column\",\n        children: /*#__PURE__*/_jsxDEV(VideoDetail, {\n          selectedVideo: selectedVideo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"six wide column\",\n        children: /*#__PURE__*/_jsxDEV(VideoList, {\n          videos: videos,\n          onVideoSelect: onVideoSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}; // class App extends React.Component{\n//   constructor(){\n//     super();\n//     this.state = {videos: [], selectedVideo: null};\n//   }\n//   // We don't want our website to have empty website on loading. So we'll fill the term \n//   componentDidMount(){\n//     this.onSearchSubmit('Youtube API');\n//   }\n//   // create a callback method\n//   onSearchSubmit =  async (term) => {\n//     console.log(\"SEARCH TERM: \", term);\n//     const res = await youtube.get('/search', {\n//       params: {q: term}\n//     })\n//     this.setState({videos: res.data.items, selectedVideo: res.data.items[0]});\n//   }\n// callback function from 2 level down.(VideoItem Compnt.)\n// onVideoSelect = (video) => {\n//   this.setState({ selectedVideo: video });\n//   console.log(\"Video:\", video.snippet.title);\n// }\n//   render(){\n//     return (\n//       <div className=\"App ui container\">\n//         <SearchBar formProp={this.onSearchSubmit}/>\n//         <div className=\"ui grid\">\n//         <div className=\" ten wide column\">\n//           <VideoDetail selectedVideo={this.state.selectedVideo}/>\n//           </div>\n//         <div className=\"six wide column\">\n//         <VideoList videos={this.state.videos} onVideoSelect={this.onVideoSelect} />\n//         </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n\n_s(App, \"pgreQswQcvHuEDpit6fh/6bGaAw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/desmiles/Desktop/React/youtube/src/components/App.js"],"names":["React","useState","useEffect","SearchBar","youtube","VideoList","VideoDetail","App","videos","setVideos","selectedVideo","setSelectedVideo","onSearchSubmit","term","console","log","res","get","params","q","data","items","onVideoSelect","video"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,IAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACbU,IAAAA,cAAc,CAAC,SAAD,CAAd;AAED,GAHQ,EAGN,EAHM,CAAT;;AAMA,QAAMA,cAAc,GAAI,MAAOC,IAAP,IAAgB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AAEA,UAAMG,GAAG,GAAG,MAAMZ,OAAO,CAACa,GAAR,CAAY,SAAZ,EAAuB;AACvCC,MAAAA,MAAM,EAAE;AAACC,QAAAA,CAAC,EAAEN;AAAJ;AAD+B,KAAvB,CAAlB;AAGAJ,IAAAA,SAAS,CAACO,GAAG,CAACI,IAAJ,CAASC,KAAV,CAAT;AACAV,IAAAA,gBAAgB,CAACK,GAAG,CAACI,IAAJ,CAASC,KAAT,CAAe,CAAf,CAAD,CAAhB;AACD,GARD;;AAWA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/BZ,IAAAA,gBAAgB,CAACY,KAAD,CAAhB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEX;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,aAAa,EAAEF;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACA,QAAC,SAAD;AAAW,UAAA,MAAM,EAAEF,MAAnB;AAA2B,UAAA,aAAa,EAAEc;AAA1C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvCD,C,CAwCA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AAEA;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAvFMf,G;;KAAAA,G;AAyFN,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport SearchBar from './SearchBar';\nimport youtube from '../apis/youtubeapi';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\n\n\nconst App = () => {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  useEffect(()=> {\n    onSearchSubmit('Bridges');\n  \n  }, []);\n\n\n  const onSearchSubmit =  async (term) => {\n    console.log(\"SEARCH TERM: \", term);\n\n    const res = await youtube.get('/search', {\n      params: {q: term}\n    })\n    setVideos(res.data.items);\n    setSelectedVideo(res.data.items[0]);\n  }\n\n\n  const onVideoSelect = (video) => {\n    setSelectedVideo(video);\n  }\n\n  return (\n    <div className=\"App ui container\">\n      <SearchBar formProp={onSearchSubmit}/>\n      <div className=\"ui grid\">\n      <div className=\" ten wide column\">\n        <VideoDetail selectedVideo={selectedVideo}/>\n        </div>\n      <div className=\"six wide column\">\n      <VideoList videos={videos} onVideoSelect={onVideoSelect} />\n      </div>\n      </div>\n    </div>\n  );\n\n}\n// class App extends React.Component{\n//   constructor(){\n//     super();\n//     this.state = {videos: [], selectedVideo: null};\n//   }\n\n//   // We don't want our website to have empty website on loading. So we'll fill the term \n\n//   componentDidMount(){\n//     this.onSearchSubmit('Youtube API');\n//   }\n\n\n//   // create a callback method\n//   onSearchSubmit =  async (term) => {\n//     console.log(\"SEARCH TERM: \", term);\n\n//     const res = await youtube.get('/search', {\n//       params: {q: term}\n//     })\n//     this.setState({videos: res.data.items, selectedVideo: res.data.items[0]});\n//   }\n\n  // callback function from 2 level down.(VideoItem Compnt.)\n  // onVideoSelect = (video) => {\n  //   this.setState({ selectedVideo: video });\n  //   console.log(\"Video:\", video.snippet.title);\n\n  // }\n\n\n\n//   render(){\n//     return (\n//       <div className=\"App ui container\">\n//         <SearchBar formProp={this.onSearchSubmit}/>\n//         <div className=\"ui grid\">\n//         <div className=\" ten wide column\">\n//           <VideoDetail selectedVideo={this.state.selectedVideo}/>\n//           </div>\n//         <div className=\"six wide column\">\n//         <VideoList videos={this.state.videos} onVideoSelect={this.onVideoSelect} />\n//         </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}